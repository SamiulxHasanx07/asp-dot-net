@model IEnumerable<Models.Order>
@{
    ViewData["Title"] = "Orders Dashboard";
}
<h2>All Orders</h2>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>Date</th>
            <th>Customer</th>
            <th>Status</th>
            <th>Payment</th>
            <th>Transaction ID</th>
            <th>Total</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var order in Model)
    {
        <tr>
            <td>@order.Id</td>
            <td>@order.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
            <td>@order.CustomerName</td>
            <td>
                <form method="post" action="/Dashboard/UpdateOrderStatus" class="d-inline">
                    <input type="hidden" name="id" value="@order.Id" />
                    <select name="status" class="form-select form-select-sm d-inline w-auto">
                        <option value="Pending" selected="@(order.Status=="Pending" ? "selected" : null)">Pending</option>
                        <option value="Paid" selected="@(order.Status=="Paid" ? "selected" : null)">Paid</option>
                        <option value="Delivered" selected="@(order.Status=="Delivered" ? "selected" : null)">Delivered</option>
                        <option value="Cancelled" selected="@(order.Status=="Cancelled" ? "selected" : null)">Cancelled</option>
                    </select>
                    <button type="submit" class="btn btn-sm btn-success ms-2">Update</button>
                </form>
                @if (order.Status == "Pending")
                {
                    <form method="post" action="/Dashboard/CancelOrder" class="d-inline ms-2">
                        <input type="hidden" name="id" value="@order.Id" />
                        <button type="submit" class="btn btn-sm btn-danger">Cancel</button>
                    </form>
                }
            </td>
            <td>@order.PaymentMethod</td>
            <td>@order.TransactionId</td>
            <td>
                @{
                    decimal total = 0M;
                    if (order?.Items != null && order.Items.Any())
                    {
                        total = order.Items.Sum(i => Convert.ToDecimal(i.Price) * Convert.ToDecimal(i.Quantity));
                    }
                }
                ৳@total.ToString("0.00")
                <br />
                <ul class="list-unstyled mt-2">
                    @foreach (var item in order.Items)
                    {
                        <li>
                            <strong>@item.ProductName</strong> x @item.Quantity (৳@item.Price each)
                        </li>
                    }
                </ul>
            </td>
        </tr>
    }
    </tbody>
</table>
@if (!Model.Any())
{
    <div class="alert alert-info">No orders found.</div>
}
